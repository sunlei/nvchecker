[__config__]
oldver = "old_ver.json"
newver = "new_ver.json"
tries = 3

[nvchecker]
source = "github"
github = "lilydjwg/nvchecker"
use_max_tag = true

[Metabase]
source = "github"
github = "metabase/metabase"
use_latest_release = true

[AriaNg]
source = "github"
github = "mayswind/AriaNg"
use_latest_release = true

[AriaNg-Native]
source = "github"
github = "mayswind/AriaNg-Native"
use_latest_release = true

[GitLab-Release]
# gitlabhq/gitlabhq
# gitlab = "gitlab-org/gitlab"
# use_max_tag = true
# url = https://about.gitlab.com/security-releases.xml
# url = https://about.gitlab.com/releases.xml
source = "cmd"
cmd = """
curl -s https://about.gitlab.com/atom.xml \
    | xq --raw-output '.feed.entry | map(select(.title|test("release:"; "i")))[0] | .title'
"""

[GitLab-Runner-Helm-Chart]
source = "gitlab"
gitlab = "gitlab-org/charts/gitlab-runner"
use_max_tag = true

[Jira-Standard]
# https://github.com/stedolan/jq/wiki/FAQ#general-questions
# https://developer.atlassian.com/server/framework/atlassian-sdk/early-access-programs/
# https://my.atlassian.com/download/feeds/archived/jira-software.json
source = "cmd"
cmd = """
curl -s https://my.atlassian.com/download/feeds/current/jira-software.json \
    | jq --raw-input --raw-output 'explode | .[1+index("("|explode): rindex(")"|explode)] | implode | fromjson | map(select(.edition=="Standard")) | .[0].version'
"""

[Jira-Enterprise_Long-Term-Support]
source = "cmd"
cmd = """
curl -s https://my.atlassian.com/download/feeds/current/jira-software.json \
    | jq --raw-input --raw-output 'explode | .[1+index("("|explode): rindex(")"|explode)] | implode | fromjson | map(select(.edition=="Enterprise")) | .[0].version'
"""

[Confluence-Standard]
source = "cmd"
cmd = """
curl -s https://my.atlassian.com/download/feeds/current/confluence.json \
    | jq --raw-input --raw-output 'explode | .[1+index("("|explode): rindex(")"|explode)] | implode | fromjson | map(select(.edition=="Standard")) | .[0].version'
"""

[Confluence-Enterprise_Long-Term-Support]
source = "cmd"
cmd = """
curl -s https://my.atlassian.com/download/feeds/current/confluence.json \
    | jq --raw-input --raw-output 'explode | .[1+index("("|explode): rindex(")"|explode)] | implode | fromjson | map(select(.edition=="Enterprise")) | .[0].version'
"""

[UniFi-Network-Controller]
source = "cmd"
cmd = '''
curl -s 'https://www.ui.com/download/?software=2451&eula=true' \
        -H 'authority: www.ui.com' \
        -H 'pragma: no-cache' \
        -H 'cache-control: no-cache' \
        -H 'x-requested-with: XMLHttpRequest' \
        --compressed \
    | jq --raw-output '.download_url | match("[\\d.]+").string'
'''

[docker-openldap]
source = "github"
github = "osixia/docker-openldap"
use_latest_release = true

[docker-openldap-backup]
source = "github"
github = "osixia/docker-openldap-backup"
use_latest_release = true

[docker-phpLDAPadmin]
source = "github"
github = "osixia/docker-phpLDAPadmin"
use_latest_release = true

[docker-self-service-password]
source = "github"
github = "tiredofit/docker-self-service-password"
use_latest_release = true

[webhook]
source = "github"
github = "adnanh/webhook"
use_latest_release = true

# [snell]
# source = "github"
# github = "surge-networks/snell"
# use_latest_release = true

[docker-compose]
source = "github"
github = "docker/compose"
use_latest_release = true

[trojan-go]
source = "github"
github = "p4gefau1t/trojan-go"
use_max_tag = true

[trojan-gfw]
source = "github"
github = "trojan-gfw/trojan"
use_latest_release = true

[Netch]
source = "github"
github = "NetchX/Netch"
use_latest_release = true

[docker-jumpserver]
source = "github"
github = "jumpserver/Dockerfile"
use_max_tag = true

[jumpserver]
source = "github"
github = "jumpserver/jumpserver"
use_latest_release = true

[jumpserver-installer]
source = "github"
github = "jumpserver/installer"
use_latest_release = true

[alfred-vscode]
source = "github"
github = "kbshl/alfred-vscode"
use_latest_release = true

[mas]
source = "github"
github = "mas-cli/mas"
use_latest_release = true

[Sequel-Ace]
source = "github"
github = "Sequel-Ace/Sequel-Ace"
use_latest_release = true

[docker-nexus3]
source = "github"
github = "sonatype/docker-nexus3"
use_latest_release = true

[grafana]
source = "github"
github = "grafana/grafana"
use_latest_release = true

[YOURLS]
source = "github"
github = "YOURLS/YOURLS"
use_latest_release = true

[shlink]
source = "github"
github = "shlinkio/shlink"
use_latest_release = true

[tailscale]
source = "github"
github = "tailscale/tailscale"
use_latest_release = true

[headscale]
source = "github"
github = "juanfont/headscale"
use_latest_release = true

[Netmaker]
source = "github"
github = "gravitl/netmaker"
use_latest_release = true

[Boop]
source = "github"
github = "IvanMathy/Boop"
use_latest_release = true

[bat]
source = "github"
github = "sharkdp/bat"
use_latest_release = true

[fzf]
source = "github"
github = "junegunn/fzf"
use_latest_release = true

[fd]
source = "github"
github = "sharkdp/fd"
use_latest_release = true

[exa]
source = "github"
github = "ogham/exa"
use_latest_release = true

[docker-cli]
source = "github"
github = "docker/cli"
use_max_tag = true

[moby]
source = "github"
github = "moby/moby"
use_latest_release = true

[curl]
source = "github"
github = "curl/curl"
use_latest_release = true

[ghq]
source = "github"
github = "x-motemen/ghq"
use_latest_release = true

[git]
source = "github"
github = "git/git"
use_max_tag = true

[gmailctl]
source = "github"
github = "mbrt/gmailctl"
use_latest_release = true

[jq]
source = "github"
github = "stedolan/jq"
use_latest_release = true

[jc]
source = "github"
github = "kellyjonbrazil/jc"
use_latest_release = true

[jless]
source = "github"
github = "PaulJuliusMartinez/jless"
use_max_tag = true

[httpie]
source = "github"
github = "httpie/httpie"
use_latest_release = true

[monolith]
source = "github"
github = "Y2Z/monolith"
use_latest_release = true

[ripgrep]
source = "github"
github = "BurntSushi/ripgrep"
use_latest_release = true

[zsh]
source = "github"
github = "zsh-users/zsh"
use_max_tag = true

[zoxide]
source = "github"
github = "ajeetdsouza/zoxide"
use_latest_release = true

[smartdns]
source = "github"
github = "pymumu/smartdns"
use_latest_release = true

[wakapi]
source = "github"
github = "muety/wakapi"
use_latest_release = true

[realm]
source = "github"
github = "zhboner/realm"
use_latest_release = true

[Signal-Desktop]
source = "github"
github = "signalapp/Signal-Desktop"
use_latest_release = true

[Bitwarden-Desktop]
source = "github"
github = "bitwarden/desktop"
use_latest_release = true

[Bitwarden-Mobile]
source = "github"
github = "bitwarden/mobile"
use_latest_release = true

[Emby]
source = "github"
github = "MediaBrowser/Emby.Releases"
use_latest_release = true

[Bitwarden-Mac_App_Store]
source = "cmd"
cmd = '''
curl https://itunes.apple.com/lookup?id=1352778147 | \
    jq --raw-output '.results[0].version'
'''

[Bitwarden-iOS_App_Store]
source = "cmd"
cmd = '''
curl https://itunes.apple.com/lookup?id=1137397744 | \
    jq --raw-output '.results[0].version'
'''

[vaultwarden]
source = "github"
github = "dani-garcia/vaultwarden"
use_latest_release = true

[prometheus-Node_exporter]
source = "github"
github = "prometheus/node_exporter"
use_latest_release = true

[prometheus-Blackbox_exporter]
source = "github"
github = "prometheus/blackbox_exporter"
use_latest_release = true

[Pulumi]
source = "github"
github = "pulumi/pulumi"
use_latest_release = true

[Terraform]
source = "github"
github = "hashicorp/terraform"
use_latest_release = true

[rclone]
source = "github"
github = "rclone/rclone"
use_latest_release = true

[nginx-proxy]
source = "github"
github = "nginx-proxy/nginx-proxy"
use_latest_release = true

[n8n]
source = "github"
github = "n8n-io/n8n"
use_latest_release = true

[cross-seed]
source = "github"
github = "cross-seed/cross-seed"
use_latest_release = true

[nas-tools]
source = "github"
github = "NAStool/nas-tools"
use_latest_release = true

[navidrome]
source = "github"
github = "navidrome/navidrome"
use_latest_release = true

[autobrr]
source = "github"
github = "autobrr/autobrr"
use_latest_release = true

[docker-plex]
source = "github"
github = "linuxserver/docker-plex"
use_latest_release = true

[docker-transmission]
source = "github"
github = "linuxserver/docker-transmission"
use_latest_release = true

[docker-qbittorrent]
source = "github"
github = "linuxserver/docker-qbittorrent"
use_latest_release = true

[transmission]
source = "github"
github = "transmission/transmission"
use_latest_release = true

[vertex]
source = "github"
github = "vertex-app/vertex"
use_max_tag = true

[qBittorrent]
source = "github"
github = "qbittorrent/qBittorrent"
use_max_tag = true

# --------------------------------------------------
# macOS Apps
# TODO:
# - shotrr
# - apparency
# - suspicious-package
# - ledger
# - eagle
# - easyfind

[Google-Chrome-Stable]
# https://chromiumdash.appspot.com/releases?platform=Mac
# https://omahaproxy.appspot.com/history?os=mac;channel=stable
source = "regex"
url = "https://chromiumdash.appspot.com/fetch_releases?channel=Stable&platform=Mac&num=1"
regex = '''"version":\s*"([\d.]+)"'''

[Google-Chrome-Beta]
source = "regex"
url = "https://chromiumdash.appspot.com/fetch_releases?channel=Beta&platform=Mac&num=1"
regex = '''"version":\s*"([\d.]+)"'''

[Google-Chrome-Dev]
source = "regex"
url = "https://chromiumdash.appspot.com/fetch_releases?channel=Dev&platform=Mac&num=1"
regex = '''"version":\s*"([\d.]+)"'''

[Visual-Studio-Code]
# source = "github"
# github = "microsoft/vscode"
# use_max_tag = true
source = "cmd"
cmd = '''
curl -s https://update.code.visualstudio.com/api/update/darwin/stable/VERSION \
    | jq --raw-output .productVersion
'''

[Surge-Mac-v3-Stable]
# source = "cmd"
# cmd = curl -s https://www.nssurge.com/mac/v3/appcast-signed.xml | xq --raw-output '.rss.channel.item[0].enclosure | [."@sparkle:shortVersionString", ."@sparkle:version"] | join("-")'
source = "sparkle"
sparkle = "https://www.nssurge.com/mac/v3/appcast-signed.xml"

[Surge-Mac-v3-Beta]
source = "sparkle"
sparkle = "https://www.nssurge.com/mac/v3/appcast-signed-beta.xml"

[Surge-Mac-v4-Stable]
source = "sparkle"
sparkle = "https://www.nssurge.com/mac/v4/appcast-signed.xml"

[Surge-Mac-v4-Beta]
source = "sparkle"
sparkle = "https://www.nssurge.com/mac/v4/appcast-signed-beta.xml"

[Fork]
# source = "cmd"
# cmd = curl -s https://git-fork.com/update/feed.xml | xq --raw-output '.rss.channel.item[0].enclosure | ."@sparkle:version"'
source = "sparkle"
sparkle = "https://git-fork.com/update/feed.xml"

[Sketch]
source = "sparkle"
sparkle = "https://download.sketchapp.com/sketch-versions.xml"

[iTerm2]
source = "sparkle"
sparkle = "https://iterm2.com/appcasts/final.xml"

[Docker-for-Mac]
source = "sparkle"
sparkle = "https://download.docker.com/mac/stable/appcast.xml"

[ForkLift]
source = "sparkle"
sparkle = "https://updates.binarynights.com/ForkLift3/update.xml"

[Wechat-for-Mac]
source = "sparkle"
sparkle = "https://dldir1.qq.com/weixin/mac/mac-release.xml"

[Navicat-Premium]
source = "sparkle"
sparkle = "https://updater.navicat.com/mac/navicat_updates.php?appName=Navicat%20Premium&appLang=en"

[NeteaseMusic]
source = "sparkle"
sparkle = "https://music.163.com/api/mac/appcast.xml"

[nvALT]
source = "sparkle"
sparkle = "https://updates.designheresy.com/nvalt/updates.xml"

[Tower-for-Mac]
source = "sparkle"
sparkle = "https://updates.fournova.com/updates/tower3-mac/stable"

[Typora]
source = "sparkle"
sparkle = "https://www.typora.io/download/dev_update.xml"

[The-Unarchiver]
source = "sparkle"
sparkle = "https://s3-us-west-2.amazonaws.com/updateinfo.devmate.com/com.macpaw.site.theunarchiver/updates.xml"

[TablePlus]
source = "sparkle"
sparkle = "https://tableplus.com/osx/version.xml"

[Sublime-Text]
source = "sparkle"
sparkle = "https://www.sublimetext.com/updates/3/stable/appcast_osx.xml"

[Marked-2]
source = "sparkle"
sparkle = "https://updates.marked2app.com/marked.xml"

[Manico]
source = "sparkle"
sparkle = "https://manico.im/api/release_manager/im.manico.Manico.xml"

[iMazing]
source = "sparkle"
sparkle = "https://downloads.imazing.com/com.DigiDNA.iMazing2Mac.xml"

[IINA]
source = "sparkle"
sparkle = "https://iina.io/appcast.xml"

[iExplorer]
source = "sparkle"
sparkle = "https://macroplant.com/iexplorer/mac/v4/appcast"

# [Hazel]
# source = "sparkle"
# sparkle = "https://www.noodlesoft.com/Products/Hazel/generate-appcast.php"

[DEVONthink]
source = "sparkle"
sparkle = "https://api.devontechnologies.com/1/apps/sparkle/sparkle.php?id=300900000"

[coconutBattery]
source = "sparkle"
sparkle = "https://coconut-flavour.com/updates/coconutBattery.xml"

[CleanMyMac-X]
source = "sparkle"
sparkle = "https://s3-us-west-2.amazonaws.com/updateinfo.devmate.com/com.macpaw.CleanMyMac4/updates.xml"

[Vorta-Backup-Client]
source = "github"
github = "borgbase/vorta"
use_latest_release = true

[Syncthing-for-macOS]
# source = "github"
# github = "syncthing/syncthing-macos"
# use_latest_release = true
source = "sparkle"
sparkle = "https://upgrades.syncthing.net/syncthing-macos/appcast.xml"

[Marked]
source = "sparkle"
sparkle = "https://updates.marked2app.com/marked.xml"

# FIXME
# [Kaleidoscope]
# source = "sparkle"
# sparkle = "https://appcasts.hypergiant.com/ks/prod/updates"

[GoLand]
source = "cmd"
cmd = '''
curl -s 'https://data.services.jetbrains.com/products/releases?code=GO&latest=true&type=release' \
    | jq --raw-output '.GO[0] | [.version, .build] | join("-")'
'''

[DataGrip]
source = "cmd"
cmd = '''
curl -s 'https://data.services.jetbrains.com/products/releases?code=DG&latest=true&type=release' \
    | jq --raw-output '.DG[0] | [.version, .build] | join("-")'
'''

[PyCharm]
source = "cmd"
cmd = '''
curl -s 'https://data.services.jetbrains.com/products/releases?code=PCP&latest=true&type=release' \
    | jq --raw-output '.PCP[0] | [.version, .build] | join("-")'
'''

[FilePane]
source = "sparkle"
sparkle = "https://updates.devmate.com/com.mymixapps.FilePane.xml"

[Dash-for-macOS]
source = "sparkle"
sparkle = "https://kapeli.com/Dash5.xml"

[CotEditor-Stable]
source = "sparkle"
sparkle = "https://coteditor.com/appcast.xml"

[CotEditor-Beta]
source = "sparkle"
sparkle = "https://coteditor.com/appcast-beta.xml"

[ClashX]
source = "sparkle"
sparkle = "https://yichengchen.github.io/clashX/appcast.xml"

[WeChat-Work]
source = "cmd"
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://work.weixin.qq.com/wework_admin/commdownload?platform=mac' \
    | grep -oP '.*\K(?<=_)[\d.]+(?=\.dmg)'
'''

[Dropbox]
source = "cmd"
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://www.dropbox.com/download?plat=mac&full=1' \
    | grep -oP '.*\K(?<=%20)[\d.]+(?=\.dmg)'
'''

[iStat-Menus]
source = "cmd"
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://download.bjango.com/istatmenus/' \
    | grep -oP '.*\K(?<=istatmenus)[\d.]+(?=\.zip)'
'''

[Firefox]
# https://ftp.mozilla.org/pub/firefox/releases/latest/README.txt
source = "cmd"
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://download.mozilla.org/?product=firefox-latest-ssl&os=osx&lang=en-US' \
    | grep -oP '.*\K(?<=releases\/)[\d.]+(?=\/mac)'
'''

[Transmit]
source = "cmd"
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://download.panic.com/transmit/Transmit-5-Latest.zip' \
    | grep -oP '.*\K(?<=%20)[\d.]+(?=\.zip)'
'''

[Little-Snitch]
source = "cmd"
cmd = '''
curl -s https://www.obdev.at/products/littlesnitch/releasenotes.html \
    | pup 'h3#first-releasenotes-headline, h3#first-releasenotes-headline span.buildnumber json{}' \
    | jq --raw-output '[.[0].text, .[1].text] | map(match("[\\d.]+").string) | join("-")'
'''

[Burp-Suite]
source = "cmd"
cmd = '''
curl -s https://portswigger.net/burp/releases/rss \
    | xq --raw-output '.rss.channel.item | map(select(.title|test("Professional"; "i")))[0] | .title'
'''

[aText]
source = "sparkle"
sparkle = "https://www.trankynam.com/atext/aText-Appcast.xml"

[Royal-TSX]
source = "sparkle"
sparkle = "https://royaltsx-v4.royalapplications.com/updates_stable.php"

[SourceTree]
source = "sparkle"
sparkle = "https://product-downloads.atlassian.com/software/sourcetree/Appcast/SparkleAppcastGroup0.xml"

[Snipaste]
source = "cmd"
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://dl.snipaste.com/mac-beta' \
    | grep -oP '.*\K(?<=Snipaste-)[\d.\-\w]+(?=\.dmg)'
'''

[Setapp]
# https://updates.devmate.com/com.setapp.DesktopClient.xml
source = "sparkle"
# sparkle = "https://s3-us-west-2.amazonaws.com/updateinfo.devmate.com/com.setapp.InstallSetapp/updates.xml"
sparkle = "https://s3-us-west-2.amazonaws.com/updateinfo.devmate.com/com.setapp.DesktopClient/updates.xml"

[QQ-for-Mac]
# source = "cmd"
# cmd = '''
#     curl -s https://im.qq.com/proxy/domain/qzonestyle.gtimg.cn/qzone/qzactStatics/configSystem/data/1373/config1.js \
#     | grep -oP '.*\K(?<=QQ_)[\d.]+(?=\.dmg)'
# '''
source = "regex"
url = "https://im.qq.com/rainbow/"
regex = '''"version":"(.+)",'''

[Notion]
# https://www.notion.so/desktop/mac/download&user_agent=MacOS
source = "cmd"
cmd = '''
curl -s 'https://www.notion.so/api/v3/getDesktopDownloadUrl' \
        -H 'pragma: no-cache' \
        -H 'cache-control: no-cache' \
        -H 'content-type: application/json' \
        --data '{"platform":"mac"}' \
    | jq --raw-output '.url' \
    | grep -oP '.*\K(?<=-)[\d.]+(?=\.dmg)'
'''

[MWeb]
source = "sparkle"
sparkle = "https://s3-us-west-2.amazonaws.com/updateinfo.devmate.com/com.coderforart.MWeb3/updates.xml"

[Motrix]
source = "github"
github = "agalwood/Motrix"
use_latest_release = true

[Microsoft-Office]
# https://docs.microsoft.com/en-us/officeupdates/update-history-office-for-mac
source = "cmd"
# cmd = '''
#     curl -s https://macadmins.software/latest.xml \
#     | xq --raw-output '.latest.package | map(select(.title|test("Office 365/2019 Suite Installer"; "i")))[0] | .version'
# '''
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://go.microsoft.com/fwlink/?linkid=525133' \
    | grep -oP '.*\K(?<=Microsoft_365_and_Office_)[\d.]+(?=_Installer\.pkg)'
'''

[1Password-for-Mac]
# https://app-updates.agilebits.com/product_history/OPM7
source = "cmd"
cmd = '''
curl -ILs -o /dev/null -w %{url_effective} 'https://app-updates.agilebits.com/download/OPM7' \
    | grep -oP '.*\K(?<=1Password-)[\d.]+(?=\.pkg)'
'''

[Alfred-4]
source = "regex"
url = "https://www.alfredapp.com/app/update4/general.xml"
regex = '''
<string>([\d.]+)<\/string>
'''

[Alfred-5]
source = "regex"
url = "https://www.alfredapp.com/app/update5/general.xml"
regex = '''
<string>(5\..+)<\/string>
'''

[Movist-Pro]
source = "sparkle"
sparkle = "https://s3.ap-northeast-2.amazonaws.com/update.cocoable.com/appcast.xml"

[Arq-Backup]
source = "cmd"
cmd = '''
curl -s https://www.arqbackup.com/download/arqbackup/arq6_release_notes.html \
    | pup 'h1:nth-child(1)' \
    | grep -oP '.*\K(?<= )[\d.]+(?=)'
'''

# FIXME
# [DaisyDisk]
# source = "cmd"
# cmd = '''
#     curl -s 'https://daisydiskapp.com/downloads/appcastReleaseNotes.php?appEdition=Standard&osVersion=10.15' \
#     | pup 'div:nth-child(1) > h1' \
#     | grep -oP '.*\K(?<= )[\d.]+(?=)'
# '''

[kitty]
source = "github"
github = "kovidgoyal/kitty"
use_latest_release = true

[Mimestream]
source = "sparkle"
sparkle = "https://mimestream.com/appcast.xml"

[Bob]
source = "sparkle"
sparkle = "https://gitee.com/ripperhe/Bob/raw/master/appcast.xml"

[Hammerspoon]
source = "sparkle"
sparkle = "https://raw.githubusercontent.com/Hammerspoon/hammerspoon/master/appcast.xml"

[QLMarkdown]
source = "sparkle"
sparkle = "https://sbarex.github.io/QLMarkdown/appcast.xml"

[AppCleaner]
source = "sparkle"
sparkle = "https://freemacsoft.net/appcleaner/updates.xml"

[Syntax-Highlight]
source = "sparkle"
sparkle = "https://sbarex.github.io/SourceCodeSyntaxHighlight/appcast.xml"

[Marta]
source = "sparkle"
sparkle = "https://updates.marta.sh/release/appcast.xml"

[Maestral]
source = "sparkle"
sparkle = "https://maestral.app/appcast.xml"

[WeChat-Mac_App_Store]
source = "cmd"
cmd = '''
curl https://itunes.apple.com/lookup?bundleId=com.tencent.xinWeChat | \
    jq --raw-output '.results[0].version'
'''

[WeChatWork-Mac_App_Store]
source = "cmd"
cmd = '''
curl https://itunes.apple.com/lookup?bundleId=com.tencent.WeWorkMac | \
    jq --raw-output '.results[0].version'
'''

# https://itunes.apple.com/lookup?country=cn&id=944848654
# https://itunes.apple.com/cn/lookup?id=944848654
[NeteaseMusic-Mac_App_Store]
source = "cmd"
cmd = '''
curl https://itunes.apple.com/cn/lookup?id=944848654 | \
    jq --raw-output '.results[0].version'
'''

[MenubarX-Mac_App_Store]
source = "cmd"
cmd = '''
curl https://itunes.apple.com/lookup?bundleId=com.app.menubarx | \
    jq --raw-output '.results[0].version'
'''

[Discord]
source = "cmd"
cmd = '''
curl -w "%{redirect_url}" -o /dev/null -s https://discord.com/api/download?platform=osx \
    | grep -oP '/\K([\d.]+)(?=/)'
'''

[YesPlayMusic]
source = "github"
github = "qier222/YesPlayMusic"
use_latest_release = true

# --------------------------------------------------
# Apple
# OS_NAME="macOS" REGEX=`printf '^%s (?:(?!beta).)*$' $OS_NAME` xq -n 'env.REGEX'
# https://ipsw.me/timeline.rss
# https://ipswdownloads.docs.apiary.io
# https://api.ineal.me/tss/docs

[macOS]
# cmd = curl -s https://developer.apple.com/news/releases/rss/releases.rss | xq --raw-output '.rss.channel.item | map(select(.title|test("^macOS (?:(?!beta).)*$"; "i")))[0] | .title'
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="macOS" REGEX=`printf '^%s (?:(?!beta).)*$' $OS_NAME` xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[macOS-Beta]
# cmd = curl -s https://developer.apple.com/news/releases/rss/releases.rss | xq --raw-output '.rss.channel.item | map(select(.title|test("macOS .+ beta "; "i")))[0] | .title'
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="macOS" REGEX="$OS_NAME .+ beta " xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[iOS]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="iOS" REGEX=`printf '^%s (?:(?!beta).)*$' $OS_NAME` xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[iOS-Beta]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="iOS" REGEX="$OS_NAME .+ beta " xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[iPadOS]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="iPadOS" REGEX=`printf '^%s (?:(?!beta).)*$' $OS_NAME` xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[iPadOS-Beta]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="iPadOS" REGEX="$OS_NAME .+ beta " xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[watchOS]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="watchOS" REGEX=`printf '^%s (?:(?!beta).)*$' $OS_NAME` xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[watchOS-Beta]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="watchOS" REGEX="$OS_NAME .+ beta " xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[tvOS]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="tvOS" REGEX=`printf '^%s (?:(?!beta).)*$' $OS_NAME` xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[tvOS-Beta]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="tvOS" REGEX="$OS_NAME .+ beta " xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[Xcode]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="Xcode" REGEX=`printf '^%s (?:(?!beta).)*$' $OS_NAME` xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''

[Xcode-Beta]
source = "cmd"
cmd = '''
curl -s https://developer.apple.com/news/releases/rss/releases.rss \
    | OS_NAME="Xcode" REGEX="$OS_NAME .+ beta " xq --raw-output '.rss.channel.item | map(select(.title|test(env.REGEX; "i")))[0] | .title | ltrimstr(env.OS_NAME + " ")'
'''


# --------------------------------------------------
# Python packages

[Django]
source = "pypi"
pypi = "Django"

[tornado]
source = "pypi"
pypi = "tornado"

[BorgBackup]
source = "pypi"
pypi = "borgbackup"

[Sentry]
source = "pypi"
pypi = "sentry"

[Beancount]
source = "pypi"
pypi = "beancount"

[Celery]
source = "pypi"
pypi = "celery"

[kombu]
source = "pypi"
pypi = "kombu"

[ansible]
source = "pypi"
pypi = "ansible"

[cryptofeed]
source = "pypi"
pypi = "cryptofeed"

[cryptostore]
source = "pypi"
pypi = "cryptostore"

[spdlog-python]
source = "pypi"
pypi = "spdlog"

# --------------------------------------------------
# npm packages

[uview-ui]
# https://www.uviewui.com
source = "npm"
npm = "uview-ui"

[React]
source = "npm"
npm = "react"

[Vuex]
source = "npm"
npm = "vuex"

[Vuejs]
source = "npm"
npm = "vue"

[dcloudio_uni-mp-weixin]
source = "npm"
npm = "@dcloudio/uni-mp-weixin"

[dcloudio_uni-h5]
source = "npm"
npm = "@dcloudio/uni-h5"

[dcloudio_uni-h5-ui]
source = "npm"
npm = "@dcloudio/uni-h5-ui"

[vue_cli]
source = "npm"
npm = "@vue/cli"


# --------------------------------------------------
# obsidian

# [Obsidian]
# source = "github"
# github = "obsidianmd/obsidian-releases"
# use_latest_release = true

[Obsidian]
source = "cmd"
cmd = '''
curl https://raw.githubusercontent.com/obsidianmd/obsidian-releases/master/desktop-releases.json | \
    jq --raw-output '.latestVersion'
'''

[Obsidian-Insider-build]
source = "cmd"
cmd = '''
curl https://raw.githubusercontent.com/obsidianmd/obsidian-releases/master/desktop-releases.json | \
    jq --raw-output '.beta.latestVersion'
'''

[obsidian-theme-minimal]
source = "github"
github = "kepano/obsidian-minimal"
use_latest_release = true

[obsidian-plugin-minimal-theme-settings]
source = "github"
github = "kepano/obsidian-minimal-settings"
use_latest_release = true

[obsidian-plugin-sliding-panes]
source = "github"
github = "deathau/sliding-panes-obsidian"
use_latest_release = true

[obsidian-plugin-calendar]
source = "github"
github = "liamcain/obsidian-calendar-plugin"
use_latest_release = true

[obsidian-plugin-advanced-tables]
source = "github"
github = "tgrosinger/advanced-tables-obsidian"
use_latest_release = true

[obsidian-plugin-note-refactor]
source = "github"
github = "lynchjames/note-refactor-obsidian"
use_latest_release = true

[obsidian-plugin-paste-url-into-selection]
source = "github"
github = "denolehov/obsidian-url-into-selection"
use_latest_release = true

[obsidian-plugin-editor-syntax-highlight]
source = "github"
github = "deathau/cm-editor-syntax-highlight-obsidian"
use_latest_release = true

[obsidian-plugin-templater]
source = "github"
github = "SilentVoid13/Templater"
use_latest_release = true

[obsidian-plugin-hider]
source = "github"
github = "kepano/obsidian-hider"
use_latest_release = true


# --------------------------------------------------
# Chia

[Chia-blockchain]
source = "github"
github = "Chia-Network/chia-blockchain"
use_latest_release = true

[hpool-chia-miner]
source = "github"
github = "hpool-dev/chia-miner"
use_latest_release = true

[hpool-chia-plotter]
source = "github"
github = "hpool-dev/chia-plotter"
use_latest_release = true

[chia_plot_manager]
source = "github"
github = "rjsears/chia_plot_manager"
use_latest_release = true

[plotman]
source = "github"
github = "ericaltendorf/plotman"
use_max_tag = true

[Swar-Chia-Plot-Manager]
source = "github"
github = "swar/Swar-Chia-Plot-Manager"
use_latest_release = true

[plotng]
source = "github"
github = "maded2/plotng"
use_latest_release = true


# --------------------------------------------------
# Fonts

[font-Sarasa_Gothic]
source = "github"
github = "be5invis/Sarasa-Gothic"
use_latest_release = true

[font-Iosevka]
source = "github"
github = "be5invis/Iosevka"
use_latest_release = true

[font-Cascadia_Code]
source = "github"
github = "microsoft/cascadia-code"
use_latest_release = true

[font-LXGW_WenKai]
source = "github"
github = "lxgw/LxgwWenKai"
use_latest_release = true

[font-Fira_Code]
source = "github"
github = "tonsky/FiraCode"
use_latest_release = true

[font-Nerd_Fonts]
source = "github"
github = "ryanoasis/nerd-fonts"
use_latest_release = true

[font-JetBrains_Mono]
source = "github"
github = "JetBrains/JetBrainsMono"
use_latest_release = true

[font-Inconsolata]
source = "github"
github = "googlefonts/Inconsolata"
use_latest_release = true

# --------------------------------------------------
# Languages

[Python]
source = "github"
github = "python/cpython"
use_max_tag = true

[Rust]
source = "github"
github = "rust-lang/rust"
use_latest_release = true

[Go]
source = "github"
github = "golang/go"
use_max_tag = true

[Nodejs]
source = "github"
github = "nodejs/node"
use_latest_release = true

# --------------------------------------------------
# C++ library

[spdlog]
source = "github"
github = "gabime/spdlog"
use_latest_release = true
